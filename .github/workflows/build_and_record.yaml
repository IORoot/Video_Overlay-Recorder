# ╭──────────────────────────────────────────────────────────────────────────╮
# │                                                                          │░
# │               Install Wordpress, Create Overlay and Record               │░
# │                                                                          │░
# ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

name: 🎞️ Create overlay and record

on: 
  workflow_dispatch:


jobs:


  install-overlay:
    runs-on: ubuntu-latest


    # ╭───────────────────────────────────────────────────────╮
    # │                     Checkout Repo                     │
    # ╰───────────────────────────────────────────────────────╯
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2



    # ╭───────────────────────────────────────────────────────╮
    # │                      Setup Node                       │
    # ╰───────────────────────────────────────────────────────╯
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22' # You can specify the Node.js version here



    # ╭───────────────────────────────────────────────────────╮
    # │                  Install PHP Server                   │
    # ╰───────────────────────────────────────────────────────╯
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0' # You can specify the PHP version here



    # ╭───────────────────────────────────────────────────────╮
    # │                    Install FFMPEG                     │
    # ╰───────────────────────────────────────────────────────╯
    - uses: FedericoCarboni/setup-ffmpeg@v2
    - name: Install FFMPEG
      run: |
          cd /usr/local/bin
          env
          ln -s /opt/hostedtoolcache/ffmpeg/*/x64/ffmpeg ./ffmpeg
          ln -s /opt/hostedtoolcache/ffmpeg/*/x64/ffprobe ./ffprobe  
          


    # ╭───────────────────────────────────────────────────────╮
    # │                   Setup the Overlay                   │
    # ╰───────────────────────────────────────────────────────╯
    - name: Setup Overlay
      run: | 
        unzip ${GITHUB_WORKSPACE}/overlays/002-fluid/002-fluid.zip -d ${GITHUB_WORKSPACE}/overlays/bounce/
        cp ${GITHUB_WORKSPACE}/inputs.json ${GITHUB_WORKSPACE}/overlays/bounce/inputs.json
        

      
      
    # ╭───────────────────────────────────────────────────────╮
    # │                   Start PHP Server                    │
    # ╰───────────────────────────────────────────────────────╯
    - name: Start PHP server
      run: php -S 0.0.0.0:8080 -t ./overlays/bounce/ &
  


    # ╭───────────────────────────────────────────────────────╮
    # │         Install Timecut with latest puppeteer         │
    # ╰───────────────────────────────────────────────────────╯
    - name: Setup Timecut
      continue-on-error: true
      run: |
          npm install
          cd ${GITHUB_WORKSPACE}/node_modules/timesnap/
          sed -i 's/"puppeteer": "\^2.1.1"/"puppeteer": "\^22.10.0"/' package.json
          npm install
          cd ${GITHUB_WORKSPACE}



    # ╭───────────────────────────────────────────────────────╮
    # │             Use Timecut to capture Video              │
    # ╰───────────────────────────────────────────────────────╯
    - name: Capture Video
      continue-on-error: true
      run: |
        node ${GITHUB_WORKSPACE}/node_modules/timecut/cli.js "http://localhost:8080"  --transparent-background --viewport="1080,1920" --fps=30 --start=3 --duration=10 --output-options="-c:v png" --pix-fmt=rgba --output=overlay_video.mov --launch-arguments="--no-sandbox --disable-setuid-sandbox --allow-file-access-from-files"




    # ╭──────────────────────────────────────────────────────────────────────────╮
    # │                                                                          │░
    # │                               GOOGLE DRIVE                               │░
    # │                                                                          │░
    # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
    


    - name: rclone copy result back to google drive
      run: | 
          echo "${{ secrets.RCLONE_CONF_B64 }}" | base64 --decode > rclone.conf
          
          mkdir videos
          
          for file in *.mp4; do
            mv -- "$file" videos
          done

          rclone copy ./videos/ GDrive:${{ github.event.inputs.gdrive_folder }}/ --config rclone.conf 





          
    # ╭───────────────────────────────────────────────────────╮
    # │                  Save Localhost CURL                  │
    # ╰───────────────────────────────────────────────────────╯
    # - name: Save file as artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: video
    #     path: ./overlay_video.mov





    # ╭───────────────────────────────────────────────────────╮
    # │     DEBUGGER - Use to SSH into the Github Runner      │
    # ╰───────────────────────────────────────────────────────╯
    # SSH ----------------------
    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1
    # SSH ----------------------

    # ╭───────────────────────────────────────────────────────╮
    # │                         NGROK                         │
    # ╰───────────────────────────────────────────────────────╯
    # - uses: dsmirc/ngrok-tunnel-action@cd
    # with:
    #   timeout: 1h
    #   port: 8080
    #   ngrok_authtoken: ${{ secrets.NGROK_AUTHTOKEN }}
    #   tunnel_type: http
    #   save_url_to_filename: tunnelURL.md
    